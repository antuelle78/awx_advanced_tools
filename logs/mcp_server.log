2025-10-22T21:27:41.171Z [INFO] server: MCP Shell Server running on stdio | Data: {}
2025-10-22T23:33:22.745Z [INFO] server: MCP Shell Server running on stdio | Data: {}
2025-10-22T23:42:57.044Z [INFO] server: MCP Shell Server running on stdio | Data: {}
2025-10-22T23:45:31.430Z [INFO] server: MCP Shell Server running on stdio | Data: {}
2025-10-22T23:46:42.388Z [INFO] server: MCP Shell Server running on stdio | Data: {}
2025-10-22T23:48:16.257Z [INFO] server: MCP Shell Server running on stdio | Data: {}
2025-10-22T23:53:08.958Z [INFO] server: MCP Shell Server running on stdio | Data: {}
2025-10-22T23:56:26.430Z [INFO] server: MCP Shell Server running on stdio | Data: {}
2025-10-22T23:57:45.092Z [DEBUG] SYSTEM: performLLMCentricEvaluation START | Data: {"command":"curl -s https://www.google.com","workingDirectory":"/home/ghost/awx_advanced_tools/mcp-server","forceUserConfirm":false}
2025-10-22T23:57:45.093Z [DEBUG] SYSTEM: LLM Evaluation iteration | Data: {"remainingIterations":5,"messagesCount":2,"hasElicitationBeenAttempted":false}
2025-10-22T23:57:45.093Z [DEBUG] SYSTEM: Pre-LLM Debug (Messages) | Data: {"messagesCount":2,"messagesPreview":[{"role":"system","contentLength":6996},{"role":"user","type":"history","contentLength":352}]}
2025-10-22T23:57:45.098Z [DEBUG] SYSTEM: Security tools imported successfully
2025-10-22T23:57:45.098Z [DEBUG] SYSTEM: About to call LLM with Function Calling (Messages) | Data: {"messagesCount":2,"securityTools":"[\n  {\n    \"type\": \"function\",\n    \"function\": {\n      \"name\": \"allow\",\n      \"description\": \"Allow command execution - the command is safe to execute\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"reasoning\": {\n            \"type\": \"string\",\n            \"description\": \"Detailed reasoning for why the command is safe\"\n          }\n        },\n        \"required\": [\n          \"reasoning\"\n        ],\n        \"additionalProperties\": false\n      }\n    }\n  },\n  {\n    \"type\": \"function\",\n    \"function\": {\n      \"name\": \"deny\",\n      \"description\": \"Deny command execution - the command is too dangerous to execute\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"reasoning\": {\n            \"type\": \"string\",\n            \"description\": \"Detailed reasoning for why the command is dangerous\"\n          },\n          \"suggested_alternatives\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"List of safer alternative commands\"\n          }\n        },\n        \"required\": [\n          \"reasoning\",\n          \"suggested_alternatives\"\n        ],\n        \"additionalProperties\": false\n      }\n    }\n  },\n  {\n    \"type\": \"function\",\n    \"function\": {\n      \"name\": \"user_confirm\",\n      \"description\": \"Request user confirmation - the command requires explicit user permission before execution\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"reasoning\": {\n            \"type\": \"string\",\n            \"description\": \"Detailed reasoning for why user confirmation is needed\"\n          },\n          \"confirmation_question\": {\n            \"type\": \"string\",\n            \"description\": \"Specific question to ask the user for confirmation (include alternatives if applicable)\"\n          }\n        },\n        \"required\": [\n          \"reasoning\",\n          \"confirmation_question\"\n        ],\n        \"additionalProperties\": false\n      }\n    }\n  },\n  {\n    \"type\": \"function\",\n    \"function\": {\n      \"name\": \"add_more_history\",\n      \"description\": \"Request additional command history - need more system context to make a decision\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"reasoning\": {\n            \"type\": \"string\",\n            \"description\": \"Detailed reasoning for why more history is needed\"\n          },\n          \"command_history_depth\": {\n            \"type\": \"number\",\n            \"minimum\": 1,\n            \"maximum\": 50,\n            \"description\": \"How many more commands back in history to examine\"\n          },\n          \"execution_results_count\": {\n            \"type\": \"number\",\n            \"minimum\": 0,\n            \"maximum\": 10,\n            \"description\": \"How many recent commands need their execution details\"\n          },\n          \"user_intent_search_keywords\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Keywords to search for in previous user intent responses\"\n          }\n        },\n        \"required\": [\n          \"reasoning\",\n          \"command_history_depth\"\n        ],\n        \"additionalProperties\": false\n      }\n    }\n  },\n  {\n    \"type\": \"function\",\n    \"function\": {\n      \"name\": \"ai_assistant_confirm\",\n      \"description\": \"Request information from AI assistant - need additional context that assistant can provide\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"reasoning\": {\n            \"type\": \"string\",\n            \"description\": \"Detailed reasoning for why assistant information is needed\"\n          },\n          \"assistant_request_message\": {\n            \"type\": \"string\",\n            \"description\": \"Specific message/question to show to the AI assistant\"\n          },\n          \"next_action\": {\n            \"type\": \"object\",\n            \"description\": \"Next action for the AI assistant to take\",\n            \"properties\": {\n              \"instruction\": {\n                \"type\": \"string\",\n                \"description\": \"Clear instruction for what the assistant should do\"\n              },\n              \"method\": {\n                \"type\": \"string\",\n                \"description\": \"How the assistant should gather the required information\"\n              },\n              \"expected_outcome\": {\n                \"type\": \"string\",\n                \"description\": \"What result is expected from the assistant action\"\n              },\n              \"executable_commands\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"List of specific commands the assistant should execute to gather information\"\n              }\n            },\n            \"required\": [\n              \"instruction\",\n              \"method\",\n              \"expected_outcome\"\n            ],\n            \"additionalProperties\": false\n          }\n        },\n        \"required\": [\n          \"reasoning\",\n          \"assistant_request_message\",\n          \"next_action\"\n        ],\n        \"additionalProperties\": false\n      }\n    }\n  }\n]","toolChoice":"auto"}
2025-10-22T23:57:45.101Z [ERROR] SYSTEM: === Exception Caught in LLM Evaluation (Messages) ===
2025-10-22T23:57:45.101Z [ERROR] SYSTEM: Error message: | Data: "MCP error -32601: No request handler configured"
2025-10-22T23:57:45.101Z [ERROR] SYSTEM: Error type: | Data: "McpError"
2025-10-22T23:57:45.101Z [ERROR] SYSTEM: Error stack: | Data: "McpError: MCP error -32601: No request handler configured\n    at Server._onresponse (file:///usr/local/lib/node_modules/@mako10k/mcp-shell-server/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:224:27)\n    at _transport.onmessage (file:///usr/local/lib/node_modules/@mako10k/mcp-shell-server/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:87:22)\n    at StdioServerTransport.processReadBuffer (file:///usr/local/lib/node_modules/@mako10k/mcp-shell-server/node_modules/@modelcontextprotocol/sdk/dist/esm/server/stdio.js:43:79)\n    at StdioServerTransport._ondata (file:///usr/local/lib/node_modules/@mako10k/mcp-shell-server/node_modules/@modelcontextprotocol/sdk/dist/esm/server/stdio.js:17:18)\n    at Socket.emit (node:events:524:28)\n    at addChunk (node:internal/streams/readable:561:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)\n    at Readable.push (node:internal/streams/readable:392:5)\n    at Pipe.onStreamRead (node:internal/stream_base_commons:191:23)"
2025-10-22T23:57:45.101Z [ERROR] SYSTEM: Messages that caused error: | Data: "[\n  {\n    \"role\": \"system\",\n    \"content\": \"# Security Command Evaluator\\n\\nYou are an expert security evaluator specialized in analyzing shell commands for safety and risk assessment.\\n\\n## Your Role\\nAnalyze the provided shell command to prevent reckless, careless, or commands that deviate from user intent.\\n\\n## Adjusted Security Criteria\\n## Security Evaluation Criteria\\n\\n### Primary Goal\\nPrevent reckless, careless, or commands that deviate from user intent.\\n\\n### Evaluation Guidelines\\n- **Reckless**: Commands with destructive potential without clear purpose\\n- **Careless**: Commands that could cause unintended side effects  \\n- **Intent Deviation**: Commands that don't align with established user workflow patterns\\n\\n### Tool Selection Guidelines\\n- **allow()**: Default for routine development operations (builds, tests, file operations in project context)\\n- **ai_assistant_confirm()**: Only when genuinely missing critical information\\n- **user_confirm()**: For commands with legitimate risk but valid use cases\\n- **deny()**: For clearly destructive or malicious commands\\n\\n### Context Awareness\\nConsider command history and established workflow patterns when evaluating commands.\\nMatch evaluation strictness to actual risk level and maintain development-friendly approach.\\n\\n**Dynamic Adjustment**: Security criteria can be refined using the adjust_criteria tool to better align with user workflow patterns and intent.\\n\\n## Security Focus\\n**Primary Goal**: Prevent commands that could cause harm through:\\n- **Reckless behavior**: Commands with destructive potential without clear purpose\\n- **Careless execution**: Commands that could cause unintended side effects\\n- **Intent deviation**: Commands that don't align with established user workflow patterns\\n\\n## Evaluation Guidelines\\n**Primary Security Goal**: Prevent reckless, careless, or commands that deviate from user intent\\n- **Reckless**: Commands with destructive potential without clear purpose or context\\n- **Careless**: Commands that could cause unintended side effects or data loss\\n- **Intent Deviation**: Commands that don't align with established user workflow patterns or stated objectives\\n\\n**Assessment Factors**:\\n- Consider the execution context: working directory, session history, user intent\\n- Evaluate proportional risk vs. legitimate use case\\n- Assess if command aligns with user's demonstrated workflow patterns\\n- Provide clear reasoning for your security assessment\\n- Suggest safer alternatives when appropriate\\n\\n## Important: Command Reference in Reasoning\\n**CRITICAL**: When referencing the command in your reasoning field, ALWAYS use the variable $COMMAND:\\n- ✅ CORRECT: \\\"The command $COMMAND is safe because...\\\"\\n- ✅ CORRECT: \\\"$COMMAND performs a file search operation...\\\"\\n- ✅ CORRECT: \\\"This $COMMAND does not require elevated privileges...\\\"\\n- ❌ WRONG: \\\"The command 'find /tmp -name \\\\\\\"*.tmp\\\\\\\"' is...\\\" (causes JSON parsing errors)\\n\\n**MANDATORY**: Use ONLY $COMMAND - no other variable names, no literal command text, no quotes around commands.\\n\\n## JSON Response Formatting for Security Evaluation\\n**SIMPLIFIED**: Always use $COMMAND instead of literal commands to avoid ALL JSON escaping issues.\\nNo complex escaping needed when using the $COMMAND variable.\\n\\n## Safety Evaluation Tools\\n\\n**Choose the appropriate tool based on your evaluation:**\\n\\n### Direct Execution Decisions:\\n- **allow()**: Command is safe and aligns with reasonable use patterns\\n- **deny()**: Command is reckless, destructive, or clearly malicious\\n\\n### Information Required Decisions:\\n- **add_more_history()**: Need context from system history to understand user intent\\n- **user_confirm()**: Command has legitimate use but requires explicit user permission due to potential impact\\n- **ai_assistant_confirm()**: Need additional information to properly assess intent and safety\\n\\n### Tool Usage Guidelines:\\n- **allow()**: Use for commands with clear purpose and reasonable risk profile\\n- **add_more_history()**: Use when command pattern requires workflow context for proper evaluation\\n- **user_confirm()**: Use when command could cause consequences but serves legitimate purposes\\n- **ai_assistant_confirm()**: Use when genuinely missing essential information for security assessment\\n- **deny()**: Use for commands with clear destructive intent or unjustifiable risk\\n\\n**Example Tool Selection:**\\n- Configuration file content → **ai_assistant_confirm()** (request file contents when security-relevant)\\n- Previous command context → **add_more_history()** (understand user workflow patterns)  \\n- System modification commands → **user_confirm()** (legitimate but impactful operations)\\n- Mass file deletion → **deny()** (if clearly reckless) or **user_confirm()** (if context-appropriate)\\n- File read operations → **allow()** (if reasonable and safe)\\n\\n## Tool-Specific Parameters:\\n**add_more_history()**: Use when you need additional SYSTEM data:\\n- command_history_depth: How many more commands back to examine\\n- execution_results_count: How many recent commands need their execution details\\n- user_intent_search_keywords: Keywords to search in previous user responses\\n\\n**ai_assistant_confirm()**: Use when you need NEW information from AI Assistant:\\n- assistant_request_message: Specific question/request for the assistant\\n- next_action: REQUIRED - Provide detailed guidance for the assistant:\\n  - instruction: Clear step-by-step instruction for what the assistant should do\\n  - method: How the assistant should gather the required information  \\n  - expected_outcome: What result is expected from the assistant action\\n  - executable_commands: Array of specific commands the assistant should run (e.g., [\\\"cat tsconfig.json\\\", \\\"npm list typescript\\\"])\\n\\nExample ai_assistant_confirm() usage:\\nWhen you need TypeScript config before allowing build commands, provide:\\n- reasoning: \\\"Need to verify TypeScript configuration before allowing npx tsc\\\"\\n- assistant_request_message: \\\"Please provide TypeScript configuration details\\\"\\n- next_action with executable_commands: [\\\"cat tsconfig.json\\\", \\\"cat package.json | grep -A3 scripts\\\"]\\n\\n**user_confirm()**: Use when you need explicit human confirmation:\\n- confirmation_question: Specific question to ask the user (include alternatives if applicable)\\n\\n**Tool Selection Rules**: \\n- ❌ Don't use add_more_history() for file contents (use ai_assistant_confirm())\\n- ❌ Don't use add_more_history() for script definitions (use ai_assistant_confirm())\\n- ❌ Don't use ai_assistant_confirm() for available system history (use add_more_history())\\n\\n## Tool Call Requirements\\n- **CRITICAL**: Use individual tools (allow, deny, user_confirm, add_more_history, ai_assistant_confirm)\\n- Each tool has specific parameters - use only what's required for that tool\\n- If user confirmation is needed, use ELICITATION for the first attempt\\n- If ELICITATION fails or subsequent evaluation is needed, default to NEED_ASSISTANT_CONFIRM\\n- **DO NOT** trigger multiple ELICITATION attempts in a single evaluation sequence\\n- ELICITATION results are reference information - do not re-evaluate them repeatedly\"\n  },\n  {\n    \"role\": \"user\",\n    \"content\": \"# Security Evaluation Request\\n\\n## Command Analysis Required\\n**Command**: `curl -s https://www.google.com`\\n**Working Directory**: /home/ghost/awx_advanced_tools/mcp-server\\n**AI Assistant Context**: Fetching Google homepage\\n\\nNo activity history available\\n\\n\\n\\n**INSTRUCTION**: Use the evaluate_command_security function to provide your security evaluation.\",\n    \"timestamp\": \"2025-10-22T23:57:45.093Z\",\n    \"type\": \"history\"\n  }\n]"
2025-10-22T23:57:45.102Z [ERROR] SYSTEM: LLM-centric evaluation failed | Data: {"error":"Function Call evaluation failed: MCP error -32601: No request handler configured","stack":"Error: Function Call evaluation failed: MCP error -32601: No request handler configured\n    at EnhancedSafetyEvaluator.callLLMForEvaluationWithMessages (file:///usr/local/lib/node_modules/@mako10k/mcp-shell-server/dist/security/enhanced-evaluator.js:732:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async EnhancedSafetyEvaluator.performLLMCentricEvaluation (file:///usr/local/lib/node_modules/@mako10k/mcp-shell-server/dist/security/enhanced-evaluator.js:357:33)\n    at async EnhancedSafetyEvaluator.evaluateCommandSafety (file:///usr/local/lib/node_modules/@mako10k/mcp-shell-server/dist/security/enhanced-evaluator.js:275:27)\n    at async SecurityManager.evaluateCommandSafetyByEnhancedEvaluator (file:///usr/local/lib/node_modules/@mako10k/mcp-shell-server/dist/security/manager.js:435:16)\n    at async ShellTools.executeShell (file:///usr/local/lib/node_modules/@mako10k/mcp-shell-server/dist/tools/shell-tools.js:32:36)\n    at async file:///usr/local/lib/node_modules/@mako10k/mcp-shell-server/dist/server.js:196:44","command":"curl -s https://www.google.com","workingDirectory":"/home/ghost/awx_advanced_tools/mcp-server"}
2025-10-22T23:57:45.101Z [ERROR] SYSTEM: === End Exception Debug ===
2025-10-22T23:59:20.395Z [INFO] server: MCP Shell Server running on stdio | Data: {}
2025-10-23T00:01:32.229Z [INFO] server: MCP Shell Server running on stdio | Data: {}
2025-10-23T00:05:42.792Z [INFO] server: MCP Shell Server running on stdio | Data: {}
2025-10-23T00:07:28.020Z [INFO] server: MCP Shell Server running on stdio | Data: {}
2025-10-23T00:09:32.558Z [INFO] server: MCP Shell Server running on stdio | Data: {}
