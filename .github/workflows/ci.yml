name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install types-jsonschema types-python-jose
    - name: Install ruff
      run: pip install ruff
    - name: Lint with ruff
      run: ruff check . --fix

  type-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install types-jsonschema types-python-jose
    - name: Install mypy
      run: pip install mypy
    - name: Set dummy env vars
      run: |
        echo "AWX_BASE_URL=dummy" >> $GITHUB_ENV
        echo "AWX_TOKEN=dummy" >> $GITHUB_ENV
        echo "LLM_ENDPOINT=dummy" >> $GITHUB_ENV
        echo "LLM_MODEL=dummy" >> $GITHUB_ENV
        echo "JWT_SECRET=dummy" >> $GITHUB_ENV
    - name: Type-check with mypy
      run: mypy --explicit-package-bases --ignore-missing-imports app

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run tests
      run: pytest

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build Docker image
      run: docker compose build

  push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push Docker image
      run: |
        docker compose build
        docker tag awx_advanced_tools:latest your-dockerhub-username/awx_advanced_tools:latest
        docker push your-dockerhub-username/awx_advanced_tools:latest